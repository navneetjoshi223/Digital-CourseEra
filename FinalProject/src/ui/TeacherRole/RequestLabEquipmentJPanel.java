/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.TeacherRole;

import Business.Business;
import Business.Organization.AcademicAdminOrganization;
import Business.Organization.InfrastructureOrganization;
import Business.Organization.Organization;
import Business.Organization.StaffOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.CurriculumWorkRequest;
import Business.WorkQueue.FinanceWorkRequest;
import Business.WorkQueue.InfrastructureWorkRequest;
import Business.WorkQueue.WorkRequest;
import Products.Product;
import Products.ProductDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author macmuffin
 */
public class RequestLabEquipmentJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RequestLabEquipmentJPanel
     */
    private JPanel workArea;
    private Organization organization;
    private Business business;
    private UserAccount userAccount;

    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public RequestLabEquipmentJPanel(JPanel workArea, UserAccount account, Organization organization, Business business) {
        initComponents();

        this.workArea = workArea;
        this.organization = organization;
        this.business = business;
        this.userAccount = account;

//        populateRequestTable();
    }

    public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) tbkWorkRequest.getModel();

        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[3];
            row[0] = request.getField1();
            row[1] = request.getField2();
            row[2] = request.getStatus();
//            String result = ((InfrastructureWorkRequest) request).getResult();
//            row[3] = result == null ? "Waiting" : result;

            model.addRow(row);
        }

        // TODO add your handling code here:
//        String item = txtItem.getText();
//        String amount = txtAmount.getText();
////        String subjects = txtsub.getText();
//
//        InfrastructureWorkRequest request = new InfrastructureWorkRequest();
////        request.setMessage(message);
//
//        request.setField1(item);
//        request.setField2(amount);
////       request.setField3(qualifications);
////       request.setField4("-");
//        request.setSender(useraccount);
////       request.setStatus("Sent");
//
//        Organization org = null;
//        for (Organization organization : business.getOrganizationDirectory().getOrganizationList()) {
//            if (organization instanceof FinanceOrganization) {
//                org = organization;
//                break;
//            }
//        }
//
//        if (org != null) {
//            org.getWorkQueue().getWorkRequestList().add(request);
//            useraccount.getWorkQueue().getWorkRequestList().add(request);
//        }
//
////        populateRequestTable();
//        JOptionPane.showMessageDialog(null, "Your Information is successfully Saved.");
//        txtname.setText("");
//        txtqualify.setText("");
//        txtsub.setText("");
    }

    /**
     * /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbkWorkRequest = new javax.swing.JTable();
        lblSoftwaresList = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        txtQuantityNeeded = new javax.swing.JTextField();
        lblQuantityNeeded = new javax.swing.JLabel();
        btnSendSoftwareRequest = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnBack1 = new javax.swing.JButton();
        txtItem = new javax.swing.JTextField();
        txtAmount = new javax.swing.JTextField();

        setBackground(new java.awt.Color(51, 102, 0));
        setLayout(null);

        tbkWorkRequest.setBackground(new java.awt.Color(255, 102, 51));
        tbkWorkRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Item", "Amount", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbkWorkRequest);
        if (tbkWorkRequest.getColumnModel().getColumnCount() > 0) {
            tbkWorkRequest.getColumnModel().getColumn(0).setResizable(false);
            tbkWorkRequest.getColumnModel().getColumn(1).setResizable(false);
            tbkWorkRequest.getColumnModel().getColumn(2).setResizable(false);
        }

        add(jScrollPane1);
        jScrollPane1.setBounds(130, 180, 584, 284);

        lblSoftwaresList.setBackground(new java.awt.Color(0, 0, 0));
        lblSoftwaresList.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblSoftwaresList.setForeground(new java.awt.Color(0, 204, 204));
        lblSoftwaresList.setText("Active Applications:");
        add(lblSoftwaresList);
        lblSoftwaresList.setBounds(40, 100, 136, 18);

        lblTitle.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(153, 204, 0));
        lblTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/lab.jpg"))); // NOI18N
        lblTitle.setText("Request Lab Equipment");
        add(lblTitle);
        lblTitle.setBounds(30, 120, 790, 430);

        btnBack.setBackground(new java.awt.Color(204, 255, 153));
        btnBack.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(41, 52, 80, 23);
        add(txtQuantityNeeded);
        txtQuantityNeeded.setBounds(0, 0, 0, 0);

        lblQuantityNeeded.setBackground(new java.awt.Color(0, 0, 0));
        lblQuantityNeeded.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblQuantityNeeded.setForeground(new java.awt.Color(204, 255, 153));
        lblQuantityNeeded.setText("Quantity:");
        add(lblQuantityNeeded);
        lblQuantityNeeded.setBounds(0, 0, 0, 0);

        btnSendSoftwareRequest.setBackground(new java.awt.Color(204, 255, 153));
        btnSendSoftwareRequest.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        btnSendSoftwareRequest.setText("Request Equiptment");
        btnSendSoftwareRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendSoftwareRequestActionPerformed(evt);
            }
        });
        add(btnSendSoftwareRequest);
        btnSendSoftwareRequest.setBounds(490, 80, 157, 23);

        jLabel1.setText("jLabel1");
        add(jLabel1);
        jLabel1.setBounds(0, 0, 0, 0);

        btnBack1.setBackground(new java.awt.Color(204, 255, 153));
        btnBack1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        btnBack1.setText("Refresh");
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });
        add(btnBack1);
        btnBack1.setBounds(730, 60, 77, 23);
        add(txtItem);
        txtItem.setBounds(240, 80, 64, 23);
        add(txtAmount);
        txtAmount.setBounds(370, 80, 64, 23);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        workArea.remove(this);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.previous(workArea);
    }//GEN-LAST:event_btnBackActionPerformed


    private void btnSendSoftwareRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendSoftwareRequestActionPerformed
//        CardLayout layout = (CardLayout) workArea.getLayout();
//        workArea.add("RequestLabTestJPanel", new TeacherMessageJPanel(workArea, userAccount, business));
//        layout.next(workArea);


        String item = txtItem.getText();
        String amount = txtAmount.getText();

        

        InfrastructureWorkRequest request = new InfrastructureWorkRequest();
//        request.setMessage(message);
        
       request.setField1(item);
       request.setField2(amount);
//       request.setField3(qualifications);
//       request.setField4("-");
       request.setSender(userAccount);
       request.setStatus("Requested");
//       request.setStatus("Sent");
        
        Organization org = null;
        for (Organization organization : business.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof InfrastructureOrganization){
                org = organization;
                break;
            }
        }

        if (org != null){
            org.getWorkQueue().getWorkRequestList().add(request);
            userAccount.getWorkQueue().getWorkRequestList().add(request);
        }
        
//        populateRequestTable();
        JOptionPane.showMessageDialog(null, "Your Information is successfully Saved.");
        txtItem.setText("");
        txtAmount.setText("");
        

    }//GEN-LAST:event_btnSendSoftwareRequestActionPerformed

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        populateRequestTable();
    }//GEN-LAST:event_btnBack1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnSendSoftwareRequest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblQuantityNeeded;
    private javax.swing.JLabel lblSoftwaresList;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tbkWorkRequest;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtItem;
    private javax.swing.JTextField txtQuantityNeeded;
    // End of variables declaration//GEN-END:variables
}
